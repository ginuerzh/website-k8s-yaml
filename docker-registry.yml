apiVersion: v1
kind: Namespace
metadata:
  name: registry
---
apiVersion: v1
kind: Service
metadata:
  name: gcr-mirror
  namespace: registry
spec:
  selector:
    app: gcr-mirror
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-gcr-mirror
  namespace: registry
spec:
  selector:
    app: k8s-gcr-mirror
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: gcr-mirror-ui
  namespace: registry
spec:
  selector:
    app: gcr-mirror-ui
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-gcr-mirror-ui
  namespace: registry
spec:
  selector:
    app: k8s-gcr-mirror-ui
  ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gcr-mirror
  namespace: registry
data:
  config.yml: |
    version: 0.1
    log:
      formatter: json
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
      maintenance:
        readonly:
          enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    proxy:
      remoteurl: https://gcr.io
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k8s-gcr-mirror
  namespace: registry
data:
  config.yml: |
    version: 0.1
    log:
      formatter: json
      fields:
        service: registry
    storage:
      cache:
        blobdescriptor: inmemory
      filesystem:
        rootdirectory: /var/lib/registry
      delete:
        enabled: true
      maintenance:
        readonly:
          enabled: true
    http:
      addr: :5000
      headers:
        X-Content-Type-Options: [nosniff]
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    proxy:
      remoteurl: https://k8s.gcr.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcr-mirror
  namespace: registry
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gcr-mirror
  template:
    metadata:
      name: gcr-mirror
      labels:
        app: gcr-mirror
    spec:
      containers:
      - name: registry
        image: registry:2.7.1
        ports:
        - name: http
          containerPort: 5000
        volumeMounts:
        - name: registry-config
          mountPath: /etc/docker/registry
        - name: registry-data
          mountPath: /var/lib/registry
        resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
      volumes:
      - name: registry-config
        configMap:
          name: gcr-mirror
      - name: registry-data
        persistentVolumeClaim:
          claimName: gcr-mirror
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-gcr-mirror
  namespace: registry
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: k8s-gcr-mirror
  template:
    metadata:
      name: k8s-gcr-mirror
      labels:
        app: k8s-gcr-mirror
    spec:
      containers:
      - name: registry
        image: registry:2.7.1
        ports:
        - name: http
          containerPort: 5000
        volumeMounts:
        - name: registry-config
          mountPath: /etc/docker/registry
        - name: registry-data
          mountPath: /var/lib/registry
        resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
      volumes:
      - name: registry-config
        configMap:
          name: k8s-gcr-mirror
      - name: registry-data
        persistentVolumeClaim:
          claimName: k8s-gcr-mirror
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gcr-mirror-ui
  namespace: registry
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: gcr-mirror-ui
  template:
    metadata:
      name: gcr-mirror-ui
      labels:
        app: gcr-mirror-ui
    spec:
      containers:
      - name: registry-ui
        image: joxit/docker-registry-ui:2.0.9
        env:
          - name: SINGLE_REGISTRY
            value: "true"
          - name: REGISTRY_URL
            value: https://gcr.ginuerzh.xyz
          - name: DELETE_IMAGES
            value: "false"
        ports:
        - name: http
          containerPort: 80
        resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: k8s-gcr-mirror-ui
  namespace: registry
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: k8s-gcr-mirror-ui
  template:
    metadata:
      name: k8s-gcr-mirror-ui
      labels:
        app: k8s-gcr-mirror-ui
    spec:
      containers:
      - name: registry-ui
        image: joxit/docker-registry-ui:2.0.9
        env:
          - name: SINGLE_REGISTRY
            value: "true"
          - name: REGISTRY_URL
            value: https://k8s-gcr.ginuerzh.xyz
          - name: DELETE_IMAGES
            value: "false"
        ports:
        - name: http
          containerPort: 80
        resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 10Mi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: gcr-mirror
  namespace: registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: k8s-gcr-mirror
  namespace: registry
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: docker-registry
  namespace: registry
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/preserve-host: "true"
    traefik.ingress.kubernetes.io/redirect-entry-point: https
spec:
  rules:
  - host: gcr.ginuerzh.xyz
    http:
      paths:
      - path: /v2
        pathType: Prefix
        backend:
          service:
            name: gcr-mirror
            port: 
              name: http
      - path: /
        pathType: Prefix
        backend:
          service:
            name: gcr-mirror-ui
            port: 
              name: http
  - host: k8s-gcr.ginuerzh.xyz
    http:
      paths:
      - path: /v2
        pathType: Prefix
        backend:
          service:
            name: k8s-gcr-mirror
            port: 
              name: http
      - path: /
        pathType: Prefix
        backend:
          service:
            name: k8s-gcr-mirror-ui
            port: 
              name: http